import numpy as np
import matplotlib.pyplot as plt


original_distribution = np.random.uniform(0, 1, 1000)


def central_limit_theorem_simulation(original_distribution, sample_size, num_samples):
    sample_means = []

    for _ in range(num_samples):
     
        sample = np.random.choice(original_distribution, size=sample_size, replace=True)

   
        sample_mean = np.mean(sample)

       
        sample_means.append(sample_mean)

    return sample_means
sample_sizes = [5, 20, 50, 100]
num_samples = 1000


plt.figure(figsize=(14, 10))


plt.subplot(3, 2, 1)
plt.hist(original_distribution, bins=30, color='blue', alpha=0.7)
plt.title('Original Distribution')


for i, sample_size in enumerate(sample_sizes):
    plt.subplot(3, 2, i + 2)
    sample_means = central_limit_theorem_simulation(original_distribution, sample_size, num_samples)
    plt.hist(sample_means, bins=30, color='green', alpha=0.7)
    plt.title(f'Distribution of Sample Means (n={sample_size})')

plt.tight_layout()
plt.show()
